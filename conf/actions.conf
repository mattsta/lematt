# Commands to run after cert updates if no override exists
[default]
update: ["sudo service nginx reload"]

# Note: CERTS and KEYS get expanded to multiple glob patterns.
#       CERTS becomes multiple arguments:
#           conf/cert/mail.domain.com* conf/cert/web.domain.com*
#       Same with KEYS — it can also expand to multiple arguments.
uploadCerts: ["rsync -avz --chmod=F644 CERTS /etc/ssl/"]
uploadKeys: ["rsync -avz --chmod=F640 KEYS /etc/ssl/private/"]


# These actions run for _every_ certificate update in *addition* to
# default and override actions.
# Supports uploadCerts, uploadKeys, update, and prepare.
[every]
# Perform post processing uploads to our configuration management system for
# all generated keys and all updated certs
uploadCerts: ["rsync -avz --chmod=F644 CERTS change-management-server:/srv/repos/manager/tls/"]
uploadKeys: ["rsync -avz --chmod=F640 KEYS change-management-server:/srv/repos/manager/tls/private/"]


# Override commands for specific certs
# You can use an unlimited number of override sections
# as long as each section has a unique name.
# (Sections must not have duplicate names or else they get merged)
[override-mail]
# Space separated list of domains (quotes, commas, brackets not required)
domains: mail.example.com

# Prepare actions replace DOMAIN with _one_ domain having its cert requested
prepare: ["ssh -t mailmash-forward http://example.com"]

uploadCerts: ["rsync -avz --chmod=F644 CERTS mailmash-upload:/etc/ssl/"]
uploadKeys: ["rsync -avz --chmod=F640 KEYS mailmash-upload:/etc/ssl/private/"]

# Replacers:
# DOMAINS_CN will expand to space separated string of *ONLY* the cert CNs
# DOMAINS_ALL will expand to all domains (including SAN domains).
update: ["ssh mailmash-reload-postfix", "ssh mailmash-reload-dovecot"]
